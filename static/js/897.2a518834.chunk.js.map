{"version":3,"file":"static/js/897.2a518834.chunk.js","mappings":"yUAEaA,EAAOC,EAAAA,EAAAA,KAAH,+DAKJC,EAAeD,EAAAA,EAAAA,IAAH,mGAEb,SAAAE,GAAK,0BAAiBA,EAAMC,MAAMC,OAAOC,OAApC,IAKJC,EAAQN,EAAAA,EAAAA,MAAH,8CAILO,EAASP,EAAAA,EAAAA,OAAH,uPACG,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,MAAvB,IAOH,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,OAAOI,OAAvB,IAIhBC,EAAaT,EAAAA,EAAAA,KAAH,+CAIVU,EAAQV,EAAAA,EAAAA,MAAH,+JAGN,SAAAE,GAAK,0BAAiBA,EAAMC,MAAMC,OAAOC,OAApC,G,yJC2BjB,UAhDkB,WAChB,IAAMM,GAAWC,EAAAA,EAAAA,MACjB,GAAiBC,EAAAA,EAAAA,MAAVC,GAAP,eAcMC,EAAS,mCAAG,WAAMC,GAAN,yFACOF,EAAOE,GADd,mBACRC,EADQ,EACRA,KADQ,uBAIdC,EAAAA,OAAAA,QAAe,+BAJD,0BAQhBA,EAAAA,OAAAA,QAAA,gBAAwBD,EAAKE,KAAKC,OAElCT,GAASU,EAAAA,EAAAA,IAAaJ,EAAKK,QAVX,2CAAH,sDAaf,OACE,SAAC,IAAD,WACE,SAAC,KAAD,CAAMC,SA3BS,SAAAC,GACjBA,EAAEC,iBAEF,IAAMC,EAAOF,EAAEG,cAAcC,SACvBZ,EAAW,CACfa,MAAOH,EAAKG,MAAMC,MAClBC,SAAUL,EAAKK,SAASD,OAG1Bf,EAAUC,EACX,EAiBG,UACE,UAAC,KAAD,YACE,UAAC,KAAD,YACE,SAAC,KAAD,UAAY,WACZ,SAAC,KAAD,CAAOgB,KAAK,QAAQZ,KAAK,cAE3B,UAAC,KAAD,YACE,SAAC,KAAD,UAAY,cACZ,SAAC,KAAD,CAAOY,KAAK,WAAWZ,KAAK,iBAE9B,SAAC,IAAD,CAAQY,KAAK,SAAb,SAAsB,gBAK/B,C","sources":["components/ContactForm/ContactForm.styled.js","pages/LogInPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  margin-top: 12px;\n  display: flex;\n`;\n\nexport const LabelContain = styled.div`\n  border-radius: 7px;\n  border: ${props => `2px solid ${props.theme.colors.accent}`};\n  padding: 4px;\n  display: block;\n`;\n\nexport const Label = styled.label`\n  margin-left: 10px;\n`;\n\nexport const Button = styled.button`\n  background-color: ${props => props.theme.colors.accent};\n  margin-left: 10px;\n  font-size: 20px;\n  border: none;\n  border-radius: 15px;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background-color: ${props => props.theme.colors.success};\n  }\n`;\n\nexport const LabelTitle = styled.span`\n  margin-right: 10px;\n`;\n\nexport const Input = styled.input`\n  height: 30px;\n  border-radius: 7px;\n  border: ${props => `2px solid ${props.theme.colors.accent}`};\n  display: block;\n  font-size: 24px;\n  padding-left: 8px;\n  outline: none;\n`;\n","import { useDispatch } from 'react-redux';\n\nimport { usePostLoginUserMutation } from 'redux/authApi';\nimport { newTokenUser } from 'redux/tokenSlice';\n\nimport {\n  Form,\n  LabelContain,\n  Label,\n  LabelTitle,\n  Input,\n} from 'components/ContactForm/ContactForm.styled';\nimport { Button } from 'components/ContactListItem/ContactListItem.styled';\nimport { Container } from 'components/Container';\nimport { Notify } from 'notiflix';\n\nconst LogInPage = () => {\n  const dispatch = useDispatch();\n  const [create] = usePostLoginUserMutation();\n\n  const sabmitForm = e => {\n    e.preventDefault();\n\n    const form = e.currentTarget.elements;\n    const formData = {\n      email: form.email.value,\n      password: form.password.value,\n    };\n\n    logInUser(formData);\n  };\n\n  const logInUser = async formData => {\n    const { data } = await create(formData);\n\n    if (!data) {\n      Notify.failure('Incorrect login or password');\n      return;\n    }\n\n    Notify.success(`Helow ${data.user.name}`);\n\n    dispatch(newTokenUser(data.token));\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={sabmitForm}>\n        <LabelContain>\n          <Label>\n            <LabelTitle>Email</LabelTitle>\n            <Input type=\"email\" name=\"email\" />\n          </Label>\n          <Label>\n            <LabelTitle>Password</LabelTitle>\n            <Input type=\"password\" name=\"password\" />\n          </Label>\n          <Button type=\"submit\">LogIn</Button>\n        </LabelContain>\n      </Form>\n    </Container>\n  );\n};\n\nexport default LogInPage;\n"],"names":["Form","styled","LabelContain","props","theme","colors","accent","Label","Button","success","LabelTitle","Input","dispatch","useDispatch","usePostLoginUserMutation","create","logInUser","formData","data","Notify","user","name","newTokenUser","token","onSubmit","e","preventDefault","form","currentTarget","elements","email","value","password","type"],"sourceRoot":""}