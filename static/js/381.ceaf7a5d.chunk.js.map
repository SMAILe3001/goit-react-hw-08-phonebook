{"version":3,"file":"static/js/381.ceaf7a5d.chunk.js","mappings":"gPAEaA,E,QAAcC,EAAAA,OAAH,gPAEF,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,MAAvB,IAMH,SAAAH,GAAK,OAAIA,EAAMC,MAAMC,OAAOE,OAAvB,I,UCNtB,SAASC,EAAT,GAAoC,IAAlBC,EAAiB,EAAjBA,QAASC,EAAQ,EAARA,KAChC,OACE,SAACT,EAAD,CAAaU,KAAK,SAASF,QAASA,EAApC,SACGC,GAGN,CAEDF,EAAOI,SAAW,CAChBH,QAASI,IAAAA,KACTH,KAAMG,IAAAA,Q,cCQR,EAfiB,WACf,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAACC,EAAA,EAAD,YACE,0BACE,SAACR,EAAD,CAAQC,QAAS,kBAAMK,GAASG,EAAAA,EAAAA,MAAf,EAA8BP,KAAM,mBAEvD,0BACE,wBAAI,6CAIX,C,mCCXD,IAAIQ,EAAuBC,EAAQ,MAEnC,SAASC,IAAkB,CAC3B,SAASC,IAA2B,CACpCA,EAAuBC,kBAAoBF,EAE3CG,EAAOC,QAAU,WACf,SAASC,EAAKtB,EAAOuB,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWZ,EAAf,CAIA,IAAIa,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAIE,KAAO,sBACLF,CAPL,CAQF,CAED,SAASG,IACP,OAAOT,CACR,CAHDA,EAAKU,WAAaV,EAMlB,IAAIW,EAAiB,CACnBC,MAAOZ,EACPa,OAAQb,EACRc,KAAMd,EACNe,KAAMf,EACNgB,OAAQhB,EACRiB,OAAQjB,EACRkB,OAAQlB,EACRmB,OAAQnB,EAERoB,IAAKpB,EACLqB,QAASZ,EACTa,QAAStB,EACTuB,YAAavB,EACbwB,WAAYf,EACZgB,KAAMzB,EACN0B,SAAUjB,EACVkB,MAAOlB,EACPmB,UAAWnB,EACXoB,MAAOpB,EACPqB,MAAOrB,EAEPsB,eAAgBnC,EAChBC,kBAAmBF,GAKrB,OAFAgB,EAAevB,UAAYuB,EAEpBA,CACR,C,uBC/CCb,EAAOC,QAAUL,EAAQ,IAARA,E,gCCNnBI,EAAOC,QAFoB,8C","sources":["components/Button/Button.styled.js","components/Button/Button.jsx","pages/HomePage.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ButtonStyle = styled.button`\n  margin: 4px;\n  background-color: ${props => props.theme.colors.accent};\n  font-size: 20px;\n  border: none;\n  border-radius: 4px;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background-color: ${props => props.theme.colors.success};\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { ButtonStyle } from './Button.styled';\n\nexport function Button({ onClick, text }) {\n  return (\n    <ButtonStyle type=\"button\" onClick={onClick}>\n      {text}\n    </ButtonStyle>\n  );\n}\n\nButton.propType = {\n  onClick: PropTypes.func,\n  text: PropTypes.string,\n};\n","import { useDispatch } from 'react-redux';\n\nimport { themeTogle } from 'redux/themeSlice';\n\nimport { Button } from 'components/Button';\nimport { Container } from 'components/Container';\n\nconst HomePage = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Container>\n      <div>\n        <Button onClick={() => dispatch(themeTogle())} text={'togle theme'} />\n      </div>\n      <div>\n        <h1>Welcome to the phonebook application</h1>\n      </div>\n    </Container>\n  );\n};\n\nexport default HomePage;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["ButtonStyle","styled","props","theme","colors","accent","success","Button","onClick","text","type","propType","PropTypes","dispatch","useDispatch","Container","themeTogle","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}