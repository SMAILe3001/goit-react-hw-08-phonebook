{"version":3,"file":"static/js/516.bcffcb67.chunk.js","mappings":"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","sources":["components/Button/Button.styled.js","components/Button/Button.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ButtonStyle = styled.button`\n  margin: 4px;\n  background-color: ${props => props.theme.colors.accent};\n  font-size: 20px;\n  border: none;\n  border-radius: 4px;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background-color: ${props => props.theme.colors.success};\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { ButtonStyle } from './Button.styled';\n\nexport function Button({ onClick, text }) {\n  return (\n    <ButtonStyle type=\"button\" onClick={onClick}>\n      {text}\n    </ButtonStyle>\n  );\n}\n\nButton.propType = {\n  onClick: PropTypes.func,\n  text: PropTypes.string,\n};\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n`;\n\nexport const LabelContain = styled.div`\n  border-radius: 7px;\n  border: ${props => `2px solid ${props.theme.colors.accent}`};\n  padding: 4px;\n  display: block;\n`;\n\nexport const Label = styled.label`\n  margin-left: 10px;\n`;\n\nexport const Button = styled.button`\n  background-color: ${props => props.theme.colors.accent};\n  margin-left: 10px;\n  font-size: 20px;\n  border: none;\n  border-radius: 15px;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    background-color: ${props => props.theme.colors.success};\n  }\n`;\n\nexport const LabelTitle = styled.span`\n  margin-right: 10px;\n`;\n\nexport const Input = styled.input`\n  height: 30px;\n  border-radius: 7px;\n  border: ${props => `2px solid ${props.theme.colors.accent}`};\n  display: block;\n  font-size: 24px;\n  padding-left: 8px;\n  outline: none;\n`;\n","import { useState } from 'react';\nimport { Notify } from 'notiflix';\n\nimport {\n  useGetContactsQuery,\n  usePostContactsMutation,\n} from 'redux/contactsApi';\n\nimport {\n  Form,\n  LabelContain,\n  Label,\n  Button,\n  LabelTitle,\n  Input,\n} from './ContactForm.styled';\n\nexport function ContactForm() {\n  const [create] = usePostContactsMutation();\n  const { data: contactList = [] } = useGetContactsQuery();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handelInputChange = e => {\n    const { name, value } = e.currentTarget;\n    if (name === 'name') setName(value);\n    if (name === 'number') setNumber(value);\n  };\n\n  const sabmitForm = e => {\n    e.preventDefault();\n\n    const normalizedFilter = name.toLowerCase();\n    const contactСheck = contactList.every(\n      contact => contact.name.toLowerCase() !== normalizedFilter\n    );\n\n    contactСheck ? addContactPhonebook() : alarmDuplicatioContact(name);\n\n    setName('');\n    setNumber('');\n  };\n\n  const addContactPhonebook = async () => {\n    await create({ name, number });\n    alarmAddContact(name);\n  };\n\n  const alarmAddContact = name => {\n    Notify.success(`Contact ${name} add.`);\n  };\n\n  const alarmDuplicatioContact = name => {\n    Notify.warning(`${name} is already in contacts.`);\n  };\n\n  return (\n    <Form onSubmit={sabmitForm}>\n      <LabelContain>\n        <Label>\n          <LabelTitle>Name</LabelTitle>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            onChange={handelInputChange}\n          />\n        </Label>\n        <Label>\n          <LabelTitle>Phonebook</LabelTitle>\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            onChange={handelInputChange}\n          />\n        </Label>\n      </LabelContain>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n}\n","import { Item, Button } from './ContactListItem.styled';\nimport { useDeleteContactsMutation } from 'redux/contactsApi';\nimport { Notify } from 'notiflix';\n\nimport { ProgressBar } from 'react-loader-spinner';\n\nexport function ContactListItem({ name, number, id }) {\n  const [deleteContactServer, { isLoading: isLoadingDelet }] =\n    useDeleteContactsMutation();\n\n  const handelClick = async (id, name) => {\n    await deleteContactServer(id);\n    alarmdeleteContact(name);\n  };\n\n  const alarmdeleteContact = name => {\n    Notify.info(`Contact ${name} delit.`);\n  };\n\n  return (\n    <Item>\n      <span>\n        {name}: {number}\n      </span>\n      <Button\n        type=\"button\"\n        onClick={() => handelClick(id, name)}\n        disabled={isLoadingDelet}\n      >\n        {isLoadingDelet ? (\n          <ProgressBar\n            height=\"20\"\n            width=\"50\"\n            borderColor=\"#F4442E\"\n            barColor=\"#51E5FF\"\n          />\n        ) : (\n          'delete'\n        )}\n      </Button>\n    </Item>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  padding: 0px;\n  list-style: none;\n`;\n","import { useSelector } from 'react-redux';\nimport { InfinitySpin } from 'react-loader-spinner';\n\nimport { getFilter } from 'redux/filterSlice';\nimport { useGetContactsQuery } from 'redux/contactsApi';\nimport { ContactListItem } from 'components/ContactListItem';\n\nimport { List } from './ContactList.styled';\n\nexport function ContactList() {\n  const { data: contacts = [], isLoading, error } = useGetContactsQuery();\n  const filter = useSelector(getFilter).trim();\n\n  const getVisibleContact = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <>\n      {error !== '' && <p>{error?.data?.message}</p>}\n      {isLoading && <InfinitySpin width=\"500\" color=\"#4fa94d\" />}\n      <List>\n        {getVisibleContact().map(contact => (\n          <ContactListItem key={contact.id} {...contact} />\n        ))}\n      </List>\n    </>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Title = styled.h3`\n  font-weight: 500;\n  font-size: 20px;\n  margin: 8px;\n`;\n\nexport const Input = styled.input`\n  height: 30px;\n  border-radius: 7px;\n  border: ${props => `2px solid ${props.theme.colors.accent}`};\n  display: block;\n  font-size: 24px;\n  padding-left: 8px;\n  outline: none;\n`;\n","import { useDispatch } from 'react-redux';\n\nimport { filterContact } from 'redux/filterSlice';\n\nimport { Input, Title } from './Filter.styled';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <Title>Find contacts by name</Title>\n      <label>\n        <Input\n          type=\"text\"\n          name=\"filter\"\n          required\n          onChange={e => dispatch(filterContact(e.currentTarget.value))}\n        />\n      </label>\n    </div>\n  );\n}\n","import { Button } from 'components/Button';\nimport { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { Container } from 'components/Container';\nimport { Filter } from 'components/Filter';\nimport { useDispatch } from 'react-redux';\nimport { themeTogle } from 'redux/themeSlice';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Container>\n      <div>\n        <Button onClick={() => dispatch(themeTogle())} text={'togle theme'} />\n      </div>\n      <div>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    </Container>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["ButtonStyle","styled","props","theme","colors","accent","success","Button","onClick","text","type","propType","PropTypes","Form","LabelContain","Label","LabelTitle","Input","ContactForm","usePostContactsMutation","create","useGetContactsQuery","data","contactList","useState","name","setName","number","setNumber","handelInputChange","e","currentTarget","value","addContactPhonebook","alarmAddContact","Notify","alarmDuplicatioContact","onSubmit","preventDefault","normalizedFilter","toLowerCase","every","contact","pattern","title","required","onChange","ContactListItem","id","useDeleteContactsMutation","deleteContactServer","isLoadingDelet","isLoading","handelClick","alarmdeleteContact","disabled","height","width","borderColor","barColor","List","ContactList","contacts","error","filter","useSelector","getFilter","trim","message","color","includes","getVisibleContact","map","Title","Filter","dispatch","useDispatch","filterContact","Container","themeTogle"],"sourceRoot":""}